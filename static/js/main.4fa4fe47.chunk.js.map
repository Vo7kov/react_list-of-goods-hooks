{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSortType","sortBy","sortByType","reorderedGoods","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","isOriginalOrder","every","item","index","className","type","classNames","onClick","prevReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAS,SAACC,GAAD,OAA0B,WACvCF,EAAYE,KAYRC,EA9CD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUH,EACZ,EADYA,WAENS,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKP,EAASc,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAGF,KAAKjB,EAASmB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAa7C,OAJIhB,GACFS,EAAaQ,UAGRR,EAoBgBS,CAAkBrB,EAAiB,CACxDM,WACAH,eAGImB,EACFtB,EAAgBuB,OAAM,SAACC,EAAMC,GAAP,OAAiBD,IAASd,EAAee,MAEnE,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYtB,IAAaP,EAASc,WAGtCgB,QAAUrB,EAAOT,EAASc,UAT5B,iCAcA,wBACEc,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYtB,IAAaP,EAASmB,SAGtCW,QAAUrB,EAAOT,EAASmB,QAT5B,4BAcA,wBACES,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAazB,IAGjB0B,QAzDQ,WACdzB,GAAY,SAAC0B,GAAD,OAAmBA,MA+C3B,sBAcER,GACA,wBACEK,KAAK,SACLD,UAAU,4BACVG,QA9DI,WACZtB,EAAYR,EAASM,MACrBD,GAAY,IAyDN,sBAUJ,6BACGM,EAAeqB,KAAI,SAACC,GAAD,OAClB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC5IjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4fa4fe47.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET: {\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    }\n\n    case SortType.LENGTH: {\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    }\n\n    default: {\n      break;\n    }\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortBy = (sortByType: SortType) => () => {\n    setSortType(sortByType);\n  };\n\n  const reverse = () => {\n    setReversed((prevReversed) => !prevReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  const reorderedGoods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const isOriginalOrder\n    = goodsFromServer.every((item, index) => item === reorderedGoods[index]);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={(sortBy(SortType.ALPHABET))}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={(sortBy(SortType.LENGTH))}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {!isOriginalOrder && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reorderedGoods.map((good: string) => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}